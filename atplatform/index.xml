<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The atPlatform on </title>
    <link>https://dev3.atsign.wtf/atplatform/</link>
    <description>Recent content in The atPlatform on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://dev3.atsign.wtf/atplatform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The atPlatform Overview</title>
      <link>https://dev3.atsign.wtf/atplatform/atplatformoverview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dev3.atsign.wtf/atplatform/atplatformoverview/</guid>
      <description>The atPlatform is designed to help developers create end-to-end encrypted mobile applications. A full stack platform written in Dart and Flutter, it includes a wide range of libraries, services and widgets specifically designed for creating privacy-first applications on any platform.
We have also build an SDK to make all of this super simple for developers so that you can get your IoT devices and Flutter apps up and running in no time.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://dev3.atsign.wtf/atplatform/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dev3.atsign.wtf/atplatform/architecture/</guid>
      <description>The picture below provides a great way to visualize just how much thought has gone into making the life of a developer on the atPlatform that much easier!
If you&amp;rsquo;re wondering what the difference between what the atPlatform consists of and what the atProtocol consists of, look no further!
The atPlatform, which has been created on top of the atProtocol consists of three major segments of developer tools. These segments consists of; Services, Libraries, and Widgets</description>
    </item>
    
    <item>
      <title>Protocol Specification</title>
      <link>https://dev3.atsign.wtf/atplatform/specification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dev3.atsign.wtf/atplatform/specification/</guid>
      <description>Introduction #The atProtcol is the underlying protocol that the atPlatform implements. It is a simple internet protocol for interacting with the Root Server and Secondary Server. The atPlatform builds on top of the atProtocol by taking full advantage of the features of the atProtocol.
See our Protocol Specification on our GitHub page under our at_protocol repository.
If you see a typo, mistake, or want to suggest a feature, please see our contributing guidelines.</description>
    </item>
    
    <item>
      <title>Root Server</title>
      <link>https://dev3.atsign.wtf/atplatform/rootserver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dev3.atsign.wtf/atplatform/rootserver/</guid>
      <description>atRoot servers are the only centralized part of the atProtocol and are centralized to provide a single namespace and a global dependable platform. No data beyond the atSign and responding authoritative atSecondary server is held on the root servers. This information is considered public and no authentication is required to look up the atSecondary server for a particular atSign.
The atRoot servers have been designed to scale to billions of atSigns and handle the request for atSign lookups at near real-time, globally.</description>
    </item>
    
    <item>
      <title>Secondary Server</title>
      <link>https://dev3.atsign.wtf/atplatform/secondary-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dev3.atsign.wtf/atplatform/secondary-server/</guid>
      <description>atSecondary (personal atSign) servers provide the second tier of the atProtocol architecture and are responsible for answering lookups for specific atSigns. atSecondary servers provide the lookup service for a particular atSign and one name only. This ensures that the atSecondary server will not mix atSign data with any other atSignâ€™s data. This is unlike web servers that can provide service to multiple websites at a time.</description>
    </item>
    
  </channel>
</rss>
