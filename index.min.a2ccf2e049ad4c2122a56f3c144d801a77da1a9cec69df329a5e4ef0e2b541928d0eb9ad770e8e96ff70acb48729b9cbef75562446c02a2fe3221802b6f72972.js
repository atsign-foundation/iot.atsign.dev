var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(n){const s=suggestions.classList.contains("d-none");if(s)return;const e=[...suggestions.querySelectorAll("a")];if(e.length===0)return;const t=e.indexOf(document.activeElement);if(n.key==="ArrowUp"){n.preventDefault();const s=t>0?t-1:0;e[s].focus()}else if(n.key==="ArrowDown"){n.preventDefault();const s=t+1<e.length?t+1:t;e[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/docs/",title:"atPlatform Documentation",description:"Documentation for the atPlatform.\n",content:"I want to\u0026hellip; #\rGet Started Follow our getting started guide here\n   Learn the SDK See our SDK Documentation here\n    Learn the platform See our infrastructure overview here\n   Follow a tutorial Find a specific tutorial here\n    Featured Tutorials #\r@moshere pro An open source end-to-end encrypted file sharing app\n   @dude app Send an end-to-end encrypted duuuuuuude to your friends\n    dess - AWS Host your own secondary server on Amazon Web Services\n   dess - GCP Host your own secondary server on Google Cloud Platform\n    More Options #\rContribute to this site \u0026rarr;    Glossary \u0026rarr;    "}).add({id:1,href:"/docs/contribute/shortcodes/",title:"Shortcodes tutorial",description:"atsign.dev shortcodes tutorial",content:""}).add({id:2,href:"/docs/contribute/style-guide/",title:"Style Guide",description:"Style guide for contributing to atsign.dev",content:"Layouts #\rIn addition to Hugo\u0026rsquo;s default list \u0026amp; single layouts, the docs section also supports codelab-list \u0026amp; codelab-single. Their inner workings are explained in the frontmatter section.\nFrontmatter #\r   Property Supported Layouts Description     title ALL Title of the page   layout ALL Hugo layout of the page   lead ALL except codelab-step A lead to show below the title, this should be short and serves to provide a little more context to the title.   description ALL SEO description for the page, this should be descriptive of the content for the page, and include keywords that represent both the content \u0026amp; the overall site\u0026rsquo;s purpose.   draft ALL Whether this page is a draft or not, if true, this page will not be built on the production site.   toc docs/single, docs/list Whether this page should generate a table of contents from headers.   autolinks docs/list Whether this page should automatically generate links for sub-pages.   weight ALL except codelab-step Used to order content in navigation   doneLink codelab-list Where to send the visitor if they press \u0026lsquo;done\u0026rsquo; at the end of the codelab.   exitLink codelab-list Where to send the visitor if they press \u0026rsquo;exit codelab\u0026rsquo;.   order codelab-single Used to order steps in a codelab, similar to \u0026lsquo;weight\u0026rsquo; property.    Content #\r No HTML in markdown content files.\nHTML shall be written in /layouts/ for the purposes of maintaining consistency across all other pages. Keep things consistent across sections.\nContent pages within a section should be written such that they match the format of other content within the section. There may be some exceptions, but keep this in mind when contributing. Examples should be clear and concise.\nMake sure to use examples that are accurate to the topic, and are easy to understand. File names should be concise and prioritize \u0026lsquo;-\u0026rsquo; over \u0026lsquo;\u0026rsquo; We\u0026rsquo;ve opted to use \u0026lsquo;-\u0026rsquo; instead of \u0026lsquo;\u0026rsquo; in link names to keep things consistent.\nThe only exception to this is when \u0026lsquo;_\u0026rsquo; is part of a name, like in \u0026lsquo;at_server\u0026rsquo;, this also allows us to distinguish between names and spaces in the url.\nLinks should be as pretty as possible for sharing purposes.  Building Layouts #\r Use bootstrap for styling where available.\nAll styling should be done in bootstrap, unless it is unable to achieve what you are after. Ensure compatibility when writing custom styles and layouts. This includes compatibility for dark/light modes, various screen sizes, and has good browser support.  JavaScript #\rThis site is using purgeCSS for the staging and production builds. If you write JavaScript that modifies the DOM in any way, ensure that all style selectors are added to the safelist in config/postcss.config.js.\nAssets #\r External assets and images should be stored in the static folder.\nSite-only images should be stored at page level where possible, or in the assets folder if it is used in multiple places across the site. See here for more information. Use FontAwesome for icons.  "}).add({id:3,href:"/docs/atplatform/overview/",title:"The atPlatform Overview",description:"Overview of the atPlatform",content:""}).add({id:4,href:"/docs/atplatform/architecture/",title:"Architecture",description:"Architectural overview of the atPlatform",content:""}).add({id:5,href:"/docs/atplatform/specification/",title:"Protocol Specification",description:"The specification of the atProtocol on the atPlatform",content:""}).add({id:6,href:"/docs/atplatform/root-server/",title:"Root Server",description:"Learn about the atPlatform root server",content:""}).add({id:7,href:"/docs/atplatform/secondary-server/",title:"Secondary Server",description:"Learn about atPlatform secondary edge servers",content:""}).add({id:8,href:"/docs/contribute/",title:"Contribute to this Site",description:"How to contribute to atsign.dev",content:""}).add({id:9,href:"/docs/reference/",title:"Reference",description:"My SEO description\n",content:""}).add({id:10,href:"/docs/atplatform/",title:"The atPlatform",description:"My SEO description\n",content:""}).add({id:11,href:"/docs/reference/atsign/",title:"atSign",description:"Learn about what an atSign is in the atPlatform\n",content:"What is an atSign #\rAn atSign is a handle (e.g. @alice) that functions as your digital identity. It uses end-to-end encryption to ensure that your data is 100% owned and controlled by you.\nAn atSign has two states: deactivated and activated. To activate an atSign, CRAM authenticate into your secondary server. After successful CRAM authentication, your atSign is activated where a PKAM key pair is generated by your device and the CRAM key will be invalid; so that only you own the keys to your secondary server.\nEach atSign has a unique key that is used to verify whether you are the atSign’s rightful owner. After first activating an atSign, be sure to save its corresponding key in a secure location. You’ll need it to sign back into the app or use other apps on the atPlatform.\nExample #\rAlice has created their own atSign called @alice. Anyone who looks up @alice can only view the information that they’ve made public through @wavi, an app that lets them set up and customize their public profile. They’ll have the freedom to adjust it as needed, and those changes will be viewable in a matter of seconds.\nWhat you can do with an atSign #\rAt the moment, you can pair your atSign with any app on the atPlatform (the underlying technology behind atSigns) to enable the app to access, but not store, your data. The number of things you can do with your atSign will increase as more and more of these atApps are built.\nWhile we wait for the rest of the Internet to catch up, you can get ahead of the game by downloading the first batch of recently launched atApps. These include @mospherePro, an end-to-end encrypted file sharing app, @buzz, an entirely new and private way to connect with others, and more.\nDiscover these atApps here.\n"}).add({id:12,href:"/docs/reference/pricing-and-costs/",title:"Pricing / Costs",description:"Reference on the pricing and costs on atSigns\n",content:"Since the atPlatform is fully open sourced and everyone can contribute, there is no cost for developers! When you make an app on the atPlatform, people that use your apps will not have to pay any fees for infrastructure or storage! The way that Atsign generates revenue is by using our special identifier which is known as an atSign. An atSign can come in many flavors with corresponding prices ranging from free, $10, $100, $1000, $5000. If you opt-in for the vanity atSign the prices increase as the atSign of your liking decreases in length and complexity. For each paid atSign you own, there is a $10 annual renewal fee. This fee does not apply to the free atSigns. What makes atSigns so awesome is that if your app is the first one someone pairs an atSign with, after buying their atSign, we pay you commission on that. Yep, you don\u0026rsquo;t pay us, we pay you.\nPaid atSigns #\rFor paid atSigns the options are listed below:\n For $10: A Hybrid atSign is an sign that ends with an underscore and up to four numbers:  atsignexample_01\n   For $100: A Custom atSign is an sign that is any combination of words, numbers, or even emojis! (at least five characters, or four characters if it includes a number or emoji):  atsignexample atest tes5\n   For $1000: A Custom atSign that is only three or four characters (no numbers):  test four tes dog\n   For $5000: A Custom atSign that is only three characters:  007 te5 r4n     Free atSigns #\rFor a FREE atSign there exists an atSign generator which creates a new set of atSigns at random for you to choose from! You are given two options: the first option requires you to add some pre-generated atSigns while the second option lets you generate an atSign based on your interests using super-secret mode. Let\u0026rsquo;s say you like music and sports, the atSign generator would perform its magic and dish out:\n* melodic74 * canopy22wild * 10axepowernoise * Modest89rackets * 90bossaball  Get started for free   "}).add({id:13,href:"/docs/reference/encryption/",title:"Encryption",description:"Definition of the term encryption\n",content:"Definition #\rEncryption is a means of achieving privacy. It is a part of cryptography which has the Greek origin meaning of \u0026ldquo;secret writing\u0026rdquo;. The goal of encryption is that assuming that an unwanted third party is eavesdropping on an insecure channel, said person would not be able to comprehend the transmitted information. Decryption is the process of converted encrypted information into a comprehensible format. Encryption and Decryption algorithms are known as ciphers. Encryption uses a key which is a set of values that the cipher, as an algorithm, will operate on. Encryption and Decryption go back a long way with one of the most well known ciphers being the Caesar Cipher\nHow we do it #\rThe atPlatform implements end-to-end encryption that is best illustrated with the following example: @alice wishes to share her phone number with her friend @bob. To do this, @alice, who is on her own device, prompts her own secondary server to direct phone @alice at her friend @bob\u0026rsquo;s secondary server. From here, a shared key is generated for @bob (@bob:shared_key@alice).\nThis shared key uses the same encryption process as the Symmetric Key Encryption, which is called AES (Advanced Encryption Standard) and involves three block ciphers: AES-128, AES-192 and AES-256.\nThe atProtocol specifically uses AES-256 for Data Encryption Keys.\nThe RSA (Rivest-Shamir-Adleman) encryption algorithm is then used to encrypt the shared key from the above example with @bob\u0026rsquo;s public key. The atProtocol specifically utilizes RSA 2048. Note, that because the RSA algorithm is an Asymmetric Key Encryption method, a public and private key are generated.\nIf you want to read more about Encryption and how it works on the atPlatform check this Medium article!\nRelated Sources #\rPublic and Private Keys \u0026rarr;    Self-Encryption Key \u0026rarr;    Privacy \u0026rarr;    "}).add({id:14,href:"/docs/reference/privacy/",title:"Privacy",description:"Definition of the term privacy\n",content:"We live in an age of information. Information is an asset that has a similar value much like other assets that you might own. As an asset, that information must be secured from potential attacks or unauthorized access. There are several security goals that must be considered:\n Confidentiality: Hidden from unauthorized access. Integrity: Protected from unauthorized change. Availability: Available to an authorized party when needed. Authentication/Liveness: Ensuring the session is \u0026ldquo;current\u0026rdquo; rather than a replay of an earlier session. For example, if you are chatting with a certain person, it would be beneficial to know that the person you are chatting with is indeed who they say they are ano not an unwanted intruder posing as the trusted person. Non-repudiation: Assurance that an actor behaved in a way they cannot deny.  I.e. proving that a sender sent a message or receiver received it.    "}).add({id:15,href:"/docs/reference/polymorphism/",title:"Polymorphism",description:"Definition of Polymorphism\n",content:"Definition #\rThe condition of occuring in several different forms.\nPolymorphism on the atPlatform is the ability to share different data depending on the context of who’s asking. atPlatform applications enable you to setup multiple personas for different areas of your life. When you share data with someone else, the value of that data may be different depending on the person receiving that data. This is true for both sides, you may ask for data from different sources and get a different answer for each one.\nPolymorphic Data #\rThe @buzz app is a stellar example of polymorphic data on the atPlatform. @buzz is like your contacts application, but with a twist. Rather than manually entering details for all of your contacts, and having to deal with duplicate contact entries from trying to sync all of your contacts over the cloud, you simply connect with someone through their atSign. In @buzz, they can create and share a specific persona with you. For example, I might want to share my work phone and email with colleagues, but my personal phone and a different email with friends. I can set up separate “work” and “friends” personas with each set of information, so when I connect with someone new, all I have to do is share the correct persona with that person. Better yet, if I want to share multiple personas, I can do that too! If I move or change my email address, I can update my information in the app, and my contacts have access to the new information and don’t have to make any edits themselves.\nExample #\r@alice’s work persona may have a different value for email than her personal persona. When she shares her email to her colleagues, they will receive her work email, however when she shares it to her friends and family, they will see her personal email. As she updates the data in each of her personas, the changes will be reflected to each person that she has shared the data with.\nTo learn more about polymorphism see this article post\nRelated Sources #\rNamespace \u0026rarr;    "}).add({id:16,href:"/docs/reference/public-private-keys/",title:"Public and Private Keys",description:"Definition of public and private keys\n",content:"Definition #\rA private key is used in asymmetric key cryptography. Asymmetric key cryptography is based on applying mathematical functions to numbers to achieve personal secrecy. It uses two keys, one being the private key. If you think of decryption as locking and unlocking padlocks with keys, then the padlock that is locked with a public key can only be unlocked with its corresponding private key.\nOn the other hand, public keys are distributed to the trusted masses. This is done through a public-key distribution channel. This channel should provide authentication and integrity. Someone should not send their public key to the community pretending to have a different public key. Everyone should have their own private and public keys. For example, Bob only needs one private key to receive all correspondence in the community, but Alice needs n public keys to communicate with n entities in the community, one public key for each entity. In other words, Alice needs a ring of public keys.\nHow it works at Atsign #\rA key in the atProtocol can be formed by using any alphanumeric and special characters (UTF-8) excluding \u0026ldquo;@\u0026rdquo;, \u0026ldquo;:\u0026rdquo; and a white space (\u0026quot; \u0026ldquo;). A key in a secondary can be any of the following 5 types:\n  Public Key\n  A public key is a key which can be looked up by any atSign holder.\n  A public key should be part of the scan verb result.\n  Format of the public key should be public:\u0026lt;identifier\u0026gt;:\n  Example:\npublic:location@alice\n The owner of the secondary should be allowed to update or delete the value of a public key.\n   Self Key\n  A Self key is a key which cannot be looked up any atSign holder other than the one created it.\n  A Self key should not be returned in a scan verb result.\n  Format of the Self key should be privatekey:\u0026lt;identifier\u0026gt;:\n  Example:\nprivatekey:pk1@alice\n The owner of the secondary should be allowed to update or delete the value of a private key.\n   Shared key\n A shared key can only be looked up by an atSign holder with whom the data has been shared. A shared key should be part of the scan verb result only for the person who created it and the specific person it has been shared with. Format of the key shared with someone else should be\ncached::\u0026lt;identifier\u0026gt;:  Example:\n@bob:phone@alice\n Note: Above Key should be part of scan verb result for only @alice and @bob\n  The owner of the secondary should be allowed to update or delete the value of a user key.\n More context on shared keys: We know that Atsign uses AES-256 \u0026amp; RSA-2048 for symmetric and asymmetric encryption respectfully.\n  RSA-2048 can encrypt up to 214 bytes which does not constitute for a lot of data. However, because it is asymmetric, we can use it to ensure that you are you by verifying that you have your private key.\n  AES-256 can encrypt around a whopping 250 million terabytes which is practically unlimited. The downside is that because this is a symmetric key, we cannot use it to authorize that you are you since this is shared with the recipient.\n  To remediate this, I can generate an AES(shared) key, and encrypt it using your public RSA key. Then we can decrypt said AES key using your private RSA key. Since you are the only holder of your private key, I can ensure that only the two of us hold the AES key. Now we can share information back-and-forth safely using the AES key as a means of encryption/decryption.\n  Private Key\n Private keys start with an underscore(_) and are not displayed in scan results. Private keys can only be looked up by the owner of the secondary    Cached Key\n  A cached key is a key that was originally created by another atSign owner but is now cached on the Secondary Server of another person\u0026rsquo;s atSign as they were given permission to cache it.\n  A cached key should be listed in the scan verb result for the atSign owner who cached it.\n  Format of the key shared with someone else should be\ncached::\u0026lt;identifier\u0026gt;:\n  Example:\ncached:@bob:phone@alice\n The person who has cached the key should not be allowed to update the cached key.\n  An atSign owner who has created and shared the key should be allowed to update a cached key, and if the \u0026ldquo;autoNotify\u0026rdquo; config parameters is set to true, the updated value should be notified (please refer to the notify verb) and the cached key updated with the new value.\n  If the person who originally shared the keys set the CCD (Cascade delete) to true, the cached key will be deleted when the original key is deleted.\n   "}).add({id:17,href:"/docs/reference/self-encryption-key/",title:"Self-Encryption Key",description:"Definition of Self-Encryption Key at Atsign\n",content:"Definition #\rSelf-Encryption key is an AES symmetric key that you own for encrypting data for yourself.\natPlatform #\rIn the atPlatform, the self-encryption key is used to encrypt data that is stored in your own secondary server. It is crucial that this key is kept secret and owned only by you so that third parties like Atsign cannot see your data.\nThe self-encryption key is generated during the CRAM process when your PKAM RSA keypair is generated and your atSign is activated.\nRelated Resources #\ratSign \u0026rarr;    Encryption \u0026rarr;    Public and Private Keys \u0026rarr;    CRAM \u0026rarr;    PKAM \u0026rarr;    "}).add({id:18,href:"/docs/reference/cram/",title:"CRAM",description:"Definition of CRAM (challenge response authentication method)\n",content:"Definition #\rCRAM is a term you may have heard of when reading about the atPlatform. CRAM stands for challenge response authentication mechanism. It is an algorithm/mechanism used in cryptography commonly used for authentication in protocols.\natPlatform #\rYou use your CRAM secret to activate your atSign and authenticate into your (secondary server)[/docs/atplatform/secondary-server] secondary server for the first time. Once authenticated, you may add, update, delete, and lookup keys in your own secondary server.\nWhen users get their atSign from atsign.com, they receive their CRAM secret in the form of a QR code. A CRAM secret is just a long string of randomly generated characters. The CRAM secret can also be fetched from a REST API since sometimes the QR code can be cumbersome. It is recommended that you let the SDK handle these API requests as it is easier and safer.\nCRAM is made easy with the atPlatform. Since the CRAM secret was generated and given by Atsign, that would be like Atsign generating your password for you. To opposite this, atPlatform\u0026rsquo;s SDKs and authentication services (such as at_onboarding_flutter) make it easy to generate a .atKeys file for subsequent logins to your secondary. This .atKeys file is generated by your device and contains the necessary keys to encrypt/decrypt data in your secondary server and the secondary server of other atSigns. The .atKeys file is closely related to PKAM which you can read more about here.\natProtocol #\rIn the atProtocol, CRAM is a verb.\nThe cram verb is used to boostrap authenticate one\u0026rsquo;s own self as an owner of a Secondary Server. It is intended to be used once until a set of PKI keys are cut on the owner\u0026rsquo;s mobile device and from then on we use the pkam verb.\nThe following regex represents the syntax of the cram verb: r'^cram:(?\u0026lt;digest\u0026gt;.+$)'\nLearn more about the cram verb here .\nKey Definitions #\r CRAM: challenge response authentication mechanism CRAM Secret: a long string of characters associated with each atSign for activation .atKeys file: holds encryption keys for PKAM authenticating OTP: one-time password  Related Resources #\rProtocol Specification \u0026rarr;    Secondary Server \u0026rarr;    Encryption \u0026rarr;    PKAM \u0026rarr;    "}).add({id:19,href:"/docs/reference/pkam/",title:"PKAM",description:"Definition of PKAM (public key authentication mechanism)\n",content:"Definition #\rPKAM stands for public key authentication mechanism. It is a mechanism for encrypting/decrypting data between two parties.\natPlatform #\rThe atPlatform\u0026rsquo;s packages and SDKs help apps generate a RSA PKAM public/private keypair and save this in a .atKeys file containing these keys. Since Atsign provided the CRAM secret, this poses an vulnerability since this is a shared secret between you and Atsign. To avert this, a new RSA PKAM keypair is generated on your device and the CRAM secret is no longer valid. The PKAM keypair is used for all subsequent authentications, and as you are the only one with access to the private key, you are the only one who is able to authenticate.\nThe PKAM public key is given out to other clients who want to send data to you. The data they send to you is encrypted using your public key and is decrypted using your private key. Read more on asymmetric encryption here.\nThe PKAM private key used by the client to authenticate into their own secondary server. It is just like the CRAM secret except it was generated by you (as opposed by Atsign) and completely owned by you.\natProtocol #\rIn the atProtocol PKAM is a verb.\nThe pkam verb is used to authenticate one\u0026rsquo;s own self as an owner of a Secondary Server using a PKI style authentication.\nThe following regex represents the syntax of the pkam verb: ^pkam:(?\u0026lt;signature\u0026gt;.+$)\nLearn more about the pkam verb here.\nKey Definitions #\r PKAM: public key authentication mechanism PKI: public key infrastructure RSA: \u0026ldquo;Rivest-Shamir-Aldeman\u0026rdquo; is an assymetric encryption algorithm. Read more here  Related Resources #\rProtocol Specification \u0026rarr;    Secondary Server \u0026rarr;    Encryption \u0026rarr;    CRAM \u0026rarr;    "}).add({id:20,href:"/docs/reference/namespace/",title:"Namespace",description:"Definition of Namespace in the atPlatform\n",content:"Definition #\rAtsign\u0026rsquo;s CTO, Colin Constable says this in an interview on Namespaces: \u0026ldquo;Most people are familiar with DNS (domain name system): for example, if you type “cnn.com”, “fox.com”, or “bbc.com”, you get news sites. But you can’t just type in “news” and expect the Internet to tell you which particular flavor of news you want. We need to create namespaces so that humans can remember the name and computers can translate it to Internet protocol. Once there is a namespace like “bbc.com,” you can reliably know that somebody owns that particular space, and it needs to be managed so that there are no clashes. For instance, you don’t want to type “bbc.com” and get sent to Amazon’s home page. That’s why they have to be unique, and we at Atsign created a new namespace with @Namespace.\u0026rdquo;\nFeel free to read more on namespaces here.\natPlatform #\rNamespace is a common term that may occur when reading about the atPlatform. To put it simply, a namespace is a unique container to place data in. More in the context of the apps, namespaces are just atSigns associated with each app so a secondary server can be aware of which data belongs to who. See an example below.\nExample #\rWhen you ask someone “What is my name?” you will get a different answer for every person you ask. If you ask your parents, they may answer with a sweet nickname they gave you. If you ask your friends, they may answer with your first name. This is how namespaces work. You can ask different namespaces for data and get a different answer every time.\nIn the context of the atProtocol, refer to the example below to improve your understanding.\nExample:\n phone.mospherepro (phone is the key, mospherepro is the namespace) will answer with data=123-123-1234 phone.alice (phone is the key, alice is the namespace) will answer with data=444-444-4444 phone.wavi (phone is the key, wavi is the namespace) will answer with data=555-555-5555  This is the beauty of the atProtocol. Each namespace replied with different information. People control their own data and which applications get what data. With the atPlatform, the people become in control of their own data privacy.\nRelated Resources #\rProtocol Specification \u0026rarr;    Secondary Server \u0026rarr;    Polymorphism \u0026rarr;    "}).add({id:21,href:"/docs/reference/synchronization/",title:"Synchronization",description:"Definition of Synchronization in the atPlatform\n",content:"Definition #\rOn at the atProtocol, your data is encrypted with your self encryption key and stored on your device. Periodically, this data is copied securely over to a dedicated cloud server which only you can decrypt and read since you are the only one who owns the private key. No one else, including Atsign can read your data. This process is known as synchronization.\nHow it works at Atsign #\rFirst we need to touch up on what local \u0026amp; remote secondaries are:\n Remote Secondary: A microservice with a DNS address which makes it addressable, provides a backup of your data in case of loss on the phone, provides a joining place to synchronize data if you have more than one device. Local Secondary: A copy of data that allows for fast interactivity and offline support. Every activated atSign gets their own remote secondary which runs on Atsign\u0026rsquo;s servers. All of your data is signed and encrypted, so Atsign cannot see it.  Synchronization aims to keep both local and remote secondaries with the same data. If by any chance the device is lost, then the data can be retrieved from the remote secondary:\nThere are two main scenarios that require synchronization. The first occurs when your device is offline. Updates are saved to your device but not synced to the server. Once the device goes online, those saved updates get synced to the server. The second scenario is when you have multiple devices: one device is offline while the other is online. Updates from the online device will get synced to the server periodically. However the offline device will not be able to pull the changes until it is back online.\nTo read more about synchronization and how it works check out this Medium Article we made.\n"}).add({id:22,href:"/docs/reference/notification/",title:"Notification",description:"Definition of Notificaton in the atPlatform, the notify verb in the atProtocol, and Definition of Monitor in the atPlatform\n",content:"atPlatform #\rNotification #\rNotification enables developers to notify another atSign of some data event. It is used to notify another atSign that data from your secondary server was modified (updated or deleted). Some example notifications include: the key\u0026rsquo;s value updated, the key was deleted, the key\u0026rsquo;s metadata changed, and more.\nThe atPlatform takes care of all of the heavy lifting with encryption, verb building, transmission, etc,.\nRead more here.\nMonitor #\rMonitor uses notifications.\nMonitor is used to receive notifications from the other secondary server.\nRead more here.\natProtocol #\rnotify verb #\rThe notify verb enables you to notify the atsign user of some data event.\nThe following is the regex for the notify verb.\nnotify:((?\u0026lt;operation\u0026gt;update|delete):)?(ttl:(?\u0026lt;ttl\u0026gt;\\d+):)?(ttb:(?\u0026lt;ttb\u0026gt;\\d+):)?(ttr:(?\u0026lt;ttr\u0026gt;(-)?\\d+):)?(ccd:(?\u0026lt;ccd\u0026gt;true|false):)?(@(?\u0026lt;forAtSign\u0026gt;[^@:\\s]-)):(?\u0026lt;atKey\u0026gt;[^:]((?!:{2})[^@])+)@(?\u0026lt;atSign\u0026gt;[^@:\\s]+)(:(?\u0026lt;value\u0026gt;.+))?    Regex Snippet Explanation, [argument details], (example)     (?\u0026lt;operation\u0026gt;update|delete):)? Operation of the notification (update|delete)   (ttl:(?\u0026lt;ttl\u0026gt;\\d+):)? TTL (time to live), [integer, 1 or more digits, optional argument]   (ttb:(?\u0026lt;ttb\u0026gt;\\d+):)? TTB (time to birth), [integer, 1 or more digits, optional argument]   (ttr:(?\u0026lt;ttr\u0026gt;(-)?\\d+):)? TTR (time to refresh), [integer, 1 or more digits, can be negative, optional argument], (e.g.: 86400 will refresh once a day)   (ccd:(?\u0026lt;ccd\u0026gt;true|false):)? CCD (casecade delete), [boolean, true|false, optional argument], (e.g.: if the sender deletes their original key and ccd is true, the cached key gets deleted on both the sender\u0026rsquo;s server and the recipient\u0026rsquo;s server)    Following the metadata for creating the notification, next, we mention the AtKey the notification pertains to.\n   AtKey Regex Snippet Explanation, [argument details], (example)     (@(?\u0026lt;forAtSign\u0026gt;[^@:\\s]-)) The atSign the notification is for, [string, required argument], (@alice)   (?\u0026lt;atKey\u0026gt;[^:]((?!:{2})[^@])+) AtKey name, [string, required argument], (e.g. \u0026lsquo;signing_publickey\u0026rsquo;)   @ at separator   (?\u0026lt;atSign\u0026gt;[^@:\\s]+)(:(?\u0026lt;value\u0026gt;.+)) sharedBy/creator atSign, [string], (e.g. \u0026lsquo;bob\u0026rsquo;)    Example use of the notify verb:\nnotify:update:@farinataanxious:test@33thesad Response:\nIf the notification was successfully sent, then the id of the notification is returned.\ndata:0ce0d150-52bf-4f09-a473-5c64777b1c53 Read more here.\nnotify:list verb #\rNotify list returns a list of notifications\nRegex\nnotify:(list (?\u0026lt;regex\u0026gt;.-)|list$) Response:\nIf the user is the owner, returns a list of received notifications. if a user is pol authenticated user, return a list of sent notifications\ndata:[{\u0026#34;id\u0026#34;:\u0026#34;0e5e9e89-c9cb-423b-8972-8c5487215990\u0026#34;,\u0026#34;from\u0026#34;:\u0026#34;@alice\u0026#34;,\u0026#34;to\u0026#34;:\u0026#34;@bob\u0026#34;,\u0026#34;key\u0026#34;:\u0026#34;@bob:phone@alice\u0026#34;,\u0026#34;value\u0026#34;:12345,\u0026#34;operation\u0026#34;:\u0026#34;update\u0026#34;,\u0026#34;epochMillis\u0026#34;:1603714122636}] notify:remove verb #\rNotify remove will remove a notification from the Notify List\nNot to be confused with notify:delete which notifies another atSign of a key change event.\nExample:\nnotify:remove:\u0026lt;notification-id\u0026gt; Response\ndata:success monitor verb #\rThe monitor verb streams received notifications.\nThe following is the regex\n^monitor$|^monitor ?(?\u0026lt;regex\u0026gt;.-)?)$ Response:\nReturns a stream of notifications\n@alice@monitor notification: {\u0026#34;id\u0026#34;:\u0026#34;773e226d-dac2-4269-b1ee-64d7ce93a42f\u0026#34;,\u0026#34;from\u0026#34;:\u0026#34;@bob\u0026#34;,\u0026#34;to\u0026#34;:\u0026#34;@alice\u0026#34;,\u0026#34;key\u0026#34;:\u0026#34;@alice:phone@bob\u0026#34;,\u0026#34;value\u0026#34;:null,\u0026#34;operation\u0026#34;:\u0026#34;update\u0026#34;,\u0026#34;epochMillis\u0026#34;:1603714720965} Read more here.\n"}).add({id:23,href:"/docs/contribute/shortcodes/button/",title:"Buttons",description:"Button shortcodes used in atsign.dev",content:"\nbutton/link #\rA button that links to another page.\n   Attribute Description     href The html href to the content when the button is clicked.   type The button style (Any bootstrap style, defaults to \u0026lsquo;primary\u0026rsquo;)   text The label for the button.    Note: Only primary and secondary types are fully supported.\nExample #\rSecondary   Primary  \n{{\u0026lt;button/linkhref=\u0026#34;#\u0026#34;type=\u0026#34;secondary\u0026#34;text=\u0026#34;Secondary\u0026#34;\u0026gt;}} {{\u0026lt;button/linkhref=\u0026#34;#\u0026#34;type=\u0026#34;primary\u0026#34;text=\u0026#34;Primary\u0026#34;\u0026gt;}} "}).add({id:24,href:"/docs/contribute/shortcodes/card/",title:"Cards",description:"Card shortcodes used in atsign.dev",content:"\ncard/breadcrumb #\rA breadcrumb style card that links to another page.\n   Attribute Description     href The html href to the content when the card is clicked.   first The first text element in the breadcrumb   second The second text element in the breadcrumb   third The third text element in the breadcrumb    Example #\rFirst \u0026rarr;    First \u0026rarr; Second \u0026rarr;    First \u0026rarr; Second \u0026rarr; Third \u0026rarr;   {{\u0026lt;card/breadcrumbhref=\u0026#34;#\u0026#34;first=\u0026#34;First\u0026#34;\u0026gt;}} {{\u0026lt;card/breadcrumbhref=\u0026#34;#\u0026#34;first=\u0026#34;First\u0026#34;second=\u0026#34;Second\u0026#34;\u0026gt;}} {{\u0026lt;card/breadcrumbhref=\u0026#34;#\u0026#34;first=\u0026#34;First\u0026#34;second=\u0026#34;Second\u0026#34;third=\u0026#34;Third\u0026#34;\u0026gt;}} card/feature #\rA feature style card that links to another page.\n   Attribute Description     href The html href to the content when the card is clicked.   class Additional css classes to apply to the card.   title The title for the card   text The text in the body of the card    See bootstrap cards for more information.\nExample #\rMy Card My text goes here...\n   {{\u0026lt;card/featureclass=\u0026#34;w-50\u0026#34;href=\u0026#34;#\u0026#34;title=\u0026#34;My Card\u0026#34;text=\u0026#34;My text goes here...\u0026#34;\u0026gt;}} card/group #\rA wrapper for cards using bootstrap\u0026rsquo;s deck style.\nNo attributes for this shortcode.\nExample #\rFeature Card 1 This is the first card to show the deck example.\n   Feature Card 2 This is the second card to show the deck example.\n    {{\u0026lt;card/group\u0026gt;}} {{\u0026lt;card/featureclass=\u0026#34;w-25 min-w-250\u0026#34;href=\u0026#34;/docs/contribute/shortcodes/card\u0026#34;title=\u0026#34;Feature Card 1\u0026#34;text=\u0026#34;This is the first card to show the deck example.\u0026#34;\u0026gt;}} {{\u0026lt;card/featureclass=\u0026#34;w-25 min-w-250\u0026#34;href=\u0026#34;/docs/contribute/shortcodes/card\u0026#34;title=\u0026#34;Feature Card 2\u0026#34;text=\u0026#34;This is the second card to show the deck example.\u0026#34;\u0026gt;}} {{\u0026lt;/card/group\u0026gt;}} card/grid #\rA css-grid based wrapper for cards best used for an even number of cards.\n   Attribute Description     class Additional css classes to apply to the wrapper.    Feature Card 1 This is the first card to show the deck example.\n   Feature Card 2 This is the second card to show the deck example.\n    Example #\r{{\u0026lt;card/gridclass=\u0026#34;grid-col-4 grid-col-md-2 grid-col-sm-1\u0026#34;\u0026gt;}} {{\u0026lt;card/featureclass=\u0026#34;w-25 min-w-250\u0026#34;href=\u0026#34;/docs/contribute/shortcodes/card\u0026#34;title=\u0026#34;Feature Card 1\u0026#34;text=\u0026#34;This is the first card to show the deck example.\u0026#34;\u0026gt;}} {{\u0026lt;card/featureclass=\u0026#34;w-25 min-w-250\u0026#34;href=\u0026#34;/docs/contribute/shortcodes/card\u0026#34;title=\u0026#34;Feature Card 2\u0026#34;text=\u0026#34;This is the second card to show the deck example.\u0026#34;\u0026gt;}} {{\u0026lt;/card/grid\u0026gt;}} card/flex #\rA css flexbox based wrapper to automatically layout cards.\n   Attribute Description     class Additional css classes to apply to the wrapper.    Feature Card 1 This is the first card to show the deck example.\n   Feature Card 2 This is the second card to show the deck example.\n    card/social #\rA card for linking to a social platform.\n   Attribute Description     class Additional css classes to apply to the bootstrap card element.   title The title for the card.   img-src The src for the img element.   img-class Additional css classes to apply to the img tag.   img-type The type of image, can be one of \u0026lsquo;page\u0026rsquo;, \u0026lsquo;asset\u0026rsquo;, or \u0026lsquo;remote\u0026rsquo; (default)   bg-class Additional css classes to apply to the img container    Example #\r Wavi Start contributing, this is where the code hits the fan.   {{\u0026lt;card/socialhref=\u0026#34;https://github.com/\u0026#34;class=\u0026#34;w-25 min-w-250\u0026#34;title=\u0026#34;Wavi\u0026#34;img-src=\u0026#34;https://wavi.ng/assets/img/wavimetalogo.jpeg\u0026#34;img-class=\u0026#34;bg-white p-5\u0026#34;\u0026gt;}} Start contributing, this is where the code hits the fan. {{\u0026lt;/card/social\u0026gt;}} card/showcase #\rA card for showcasing a single item.\n   Attribute Description     class Additional css classes to apply to the bootstrap card element.   title The title for the card.   img-src The src for the img element.   img-class Additional css classes to apply to the img tag.   img-type The type of image, can be one of \u0026lsquo;page\u0026rsquo;, \u0026lsquo;asset\u0026rsquo;, or \u0026lsquo;remote\u0026rsquo; (default)   bg-class Additional css classes to apply to the img container    Example #\r Wavi Your space on the privacy-first web.\nLearn more  Wavi.ng    {{\u0026lt;card/showcaseclass=\u0026#34;w-50\u0026#34;title=\u0026#34;Wavi\u0026#34;img-src=\u0026#34;https://wavi.ng/assets/img/wavimetalogo.jpeg\u0026#34;img-class=\u0026#34;bg-white p-5\u0026#34;\u0026gt;}} {{\u0026lt;card/showcase-item\u0026gt;}}Your space on the privacy-first web.{{\u0026lt;/card/showcase-item\u0026gt;}} {{\u0026lt;card/showcase-linkhref=\u0026#34;https://atsign.com/apps/wavi\u0026#34;\u0026gt;}}Learn more{{\u0026lt;/card/showcase-link\u0026gt;}} {{\u0026lt;card/showcase-linkhref=\u0026#34;https://wavi.ng/@wavi\u0026#34;\u0026gt;}}Wavi.ng{{\u0026lt;/card/showcase-link\u0026gt;}} {{\u0026lt;/card/showcase\u0026gt;}} "}).add({id:25,href:"/docs/contribute/shortcodes/image/",title:"Images",description:"Image shortcodes used in atsign.dev",content:"\nInclude an image using the 3 different types:\n remote (default) page asset     Attribute Description     class Additional css classes to apply to the img element.   src The src for the image (url or path).   type The type of image (remote, page or global).    image - remote #\rUsed when you would like to use an image from another site (with permission of course!).\nYou do not need to specify a type for this since it is default.\nSet src to the url of the image.\nExample #\r{{\u0026lt;imageclass=\u0026#34;bg-white\u0026#34;src=\u0026#34;https://atsign.com/wp-content/uploads/2020/09/The@Company-Logo@2x.png.webp\u0026#34;\u0026gt;}} image - page #\rUsed when an image belongs to this site, and only needs to be visible from a single page.\nSet the type to \u0026ldquo;page\u0026rdquo; for this.\nSet the src to the filename for your image.\nIf your page is not named \u0026ldquo;index.md\u0026rdquo; or \u0026ldquo;_index.md\u0026rdquo;:\n Create a folder with the same name as your page (without the \u0026ldquo;.md\u0026rdquo;). Place your file in this folder and rename it to index.md Place your image in the folder, and you should be good to go!.  Your folder structure should look like this after:\n- my_page (folder) \\ - index.md \\ - my_image.png Example #\r{{\u0026lt;imageclass=\u0026#34;bg-white\u0026#34;src=\u0026#34;my_image.png\u0026#34;type=\u0026#34;page\u0026#34;\u0026gt;}} image - asset #\rUsed when an image belongs to this site, and needs to be visible from multiple pages.\nSet the type to \u0026ldquo;asset\u0026rdquo; for this.\nSet the src to the filepath for your image from within the assets folder.\nExample #\r{{\u0026lt;imageclass=\u0026#34;bg-white\u0026#34;src=\u0026#34;img/contributing/my_global_image.png\u0026#34;type=\u0026#34;asset\u0026#34;\u0026gt;}} "}).add({id:26,href:"/docs/contribute/shortcodes/links/",title:"Links",description:"Links shortcodes used in atsign.dev",content:"\nAnchor Tag (a) #\rLinks in your paragraphs\n   Attribute Description     href The html href to the content when the link is clicked.   target (optional) \u0026ldquo;_blank\u0026rdquo; for new tab, \u0026ldquo;_self\u0026rdquo; for same frame (default, *use markdown for self links: [here](www.google.com)),   rel (optional) \u0026ldquo;canonical\u0026rdquo; for canonical links    Example #\ratsign.com  {{\u0026lt;arel=\u0026#34;canonical\u0026#34;target=\u0026#34;_blank\u0026#34;href=\u0026#34;https://atsign.com/\u0026#34;\u0026gt;}} atsign.com {{\u0026lt;/a\u0026gt;}} "}).add({id:27,href:"/docs/contribute/shortcodes/panel/",title:"Panel",description:"Panel shortcodes used in atsign.dev",content:"\npanel/feature #\rA large format feature panel.\n   Attribute Description     class Additional css classes to apply to the panel   title Title to be displayed in the panel   footnote Optional text to be displayed below the inner text   img-src The src for the img element.   img-type The type of image, can be one of \u0026lsquo;page\u0026rsquo;, \u0026lsquo;asset\u0026rsquo;, or \u0026lsquo;remote\u0026rsquo; (default)   img-class Additional css classes to apply to the img tag.   img-right Whether the image should be positioned to the right side or not   theme The color theme for this, can be one of \u0026lsquo;gray\u0026rsquo;, \u0026rsquo;light\u0026rsquo;, or \u0026lsquo;clear\u0026rsquo; (default)    Example #\r Option 1: Clear This panel is an example of the clear theme with its image positioned to the right. Try mixing and matching different themes and orientations to make a page look more visually appealing. Use footnotes to add captions to an image or additional context\n   Option 2: Gray This panel is an example of the gray theme with its image positioned to the left. Make sure that you omit the img-right attribute to get the orientation of the image to appear on the left side. Use footnotes to add captions to an image or additional context\n    Option 3: Light This panel is an example of the light theme with its image positioned to the left. Use footnotes to add captions to an image or additional context\n  {{\u0026lt;panel/featuretitle=\u0026#34;hello\u0026#34;footnote=\u0026#34;foot\u0026#34;img-src=\u0026#34;https://wavi.ng/assets/img/wavimetalogo.jpeg\u0026#34;theme=\u0026#34;clear\u0026#34;img-class=\u0026#34;bg-white\u0026#34;img-right=\u0026#34;true\u0026#34;\u0026gt;}} test {{\u0026lt;/panel/feature\u0026gt;}} "}).add({id:28,href:"/docs/contribute/shortcodes/spacing/",title:"Spacing",description:"Spacing shortcodes used in atsign.dev",content:"\nLine Break (br) #\rInsert a simple line break.\nExample #\rSome text here and then a line break.\nSome text here {{\u0026lt;br\u0026gt;}} and then a line break. "}).add({id:29,href:"/docs/contribute/shortcodes/superscripts/",title:"Superscripts",description:"Superscripts with links",content:"\nSuperscripts (sup) #\rSuperscript go next to text.\nExample #\rRegular TextSuperscript\nRegular Text{{\u0026lt;sup\u0026gt;}}Superscript{{\u0026lt;/sup\u0026gt;}} "}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()